<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>在Win11的WSL2下使用PyCharm运行PyTorch</title>
      <link href="/2022/10/21/zai-win11-de-wsl2-xia-shi-yong-pycharm-yun-xing-pytorch/"/>
      <url>/2022/10/21/zai-win11-de-wsl2-xia-shi-yong-pycharm-yun-xing-pytorch/</url>
      
        <content type="html"><![CDATA[<h1 id="在Win11的WSL2下使用PyCharm运行PyTorch"><a href="#在Win11的WSL2下使用PyCharm运行PyTorch" class="headerlink" title="在Win11的WSL2下使用PyCharm运行PyTorch"></a>在Win11的WSL2下使用PyCharm运行PyTorch</h1><h2 id="一、配置WSL解释器"><a href="#一、配置WSL解释器" class="headerlink" title="一、配置WSL解释器"></a>一、配置WSL解释器</h2><p>设置项目解释器<br><img src="/2022/10/21/zai-win11-de-wsl2-xia-shi-yong-pycharm-yun-xing-pytorch/pycharm_interpreter.png"><br>设置System Interpreter 或 WSL2里的虚拟环境（已存在或新建）<br><img src="/2022/10/21/zai-win11-de-wsl2-xia-shi-yong-pycharm-yun-xing-pytorch/pycharm_interpreter2.png"><br><img src="/2022/10/21/zai-win11-de-wsl2-xia-shi-yong-pycharm-yun-xing-pytorch/pycharm_interpreter2_1.png"><br>配置完成<br><img src="/2022/10/21/zai-win11-de-wsl2-xia-shi-yong-pycharm-yun-xing-pytorch/pycharm_interpreter3.png"></p><h2 id="二、配置Terminal"><a href="#二、配置Terminal" class="headerlink" title="二、配置Terminal"></a>二、配置Terminal</h2><p>设置终端Terminal,将Shell path改为wsl.exe<br>![](./在Win11的WSL2下使用PyCharm运行PyTorch/pycharm_interpreter4.png</p><h2 id="三、正常运行"><a href="#三、正常运行" class="headerlink" title="三、正常运行"></a>三、正常运行</h2><p><img src="/2022/10/21/zai-win11-de-wsl2-xia-shi-yong-pycharm-yun-xing-pytorch/pycharm_wsl_demo.png"></p><h2 id="四、调试"><a href="#四、调试" class="headerlink" title="四、调试"></a>四、调试</h2><p>会弹出防火墙信息弹窗，点允许即可<br><img src="/2022/10/21/zai-win11-de-wsl2-xia-shi-yong-pycharm-yun-xing-pytorch/pycharm_wsl_debug.png"></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Win11 </tag>
            
            <tag> WSL2 </tag>
            
            <tag> PyCharm </tag>
            
            <tag> PyTorch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win11+WSL2+Ubuntu20.04+CUDA+PYTORCH深度学习环境搭建</title>
      <link href="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/"/>
      <url>/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Win11-WSL2-Ubuntu20-04-CUDA-PYTORCH深度学习环境搭建"><a href="#Win11-WSL2-Ubuntu20-04-CUDA-PYTORCH深度学习环境搭建" class="headerlink" title="Win11+WSL2+Ubuntu20.04+CUDA+PYTORCH深度学习环境搭建"></a>Win11+WSL2+Ubuntu20.04+CUDA+PYTORCH深度学习环境搭建</h1><h2 id="一、安装WSL2"><a href="#一、安装WSL2" class="headerlink" title="一、安装WSL2"></a>一、安装WSL2</h2><ol><li><p>开启Windows功能： 系统设置 -&gt; 应用 -&gt; 可选功能 -&gt; 最下边的 「更多 Windows 功能」 -&gt; 找到并勾选 「Hyper-V」和「适用于 Linux 的 Windows 子系统」-&gt; 点击确定<br><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/setting1.png"><br><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/setting2.png"><br>WRAN: 重启电脑</p></li><li><p>配置和安装wsl2和ubuntu</p></li></ol><p>官网文档：<a href="https://learn.microsoft.com/en-us/windows/ai/directml/gpu-cuda-in-wsl">https://learn.microsoft.com/en-us/windows/ai/directml/gpu-cuda-in-wsl</a></p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html"># Wran: 以管理员身份运行terminal# 安装wslwsl --install# 设置版本为wsl2wsl --set-default-version 2# 更新wslwsl --update# 查看可安装的Linux版本wsl --list online# 安装Ubuntu20.04wsl --install -d Ubuntu-20.04<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/wsl_install.png"><br><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/wsl_list_v.png"></p><ol start="3"><li>换源</li></ol><p>打开sources.list文件</p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">sudo cp /etc/apt/sources.list /etc/apt/sources.list.baksudo chmod 777 /etc/apt/sources.listsudo vim /etc/apt/sources.list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>在vim的命令模式下按d,可以删除内容</p><p>按 i 变成编辑模式，把下面内容复制粘贴进去</p><p>先按ESC退回到命令模式，按 :wq 进行保存</p><pre class="line-numbers language-none"><code class="language-none"># 阿里源deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-proposed main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiversedeb-src http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse# 清华源# 默认注释了源码镜像以提高 apt update 速度，如有需要可自行取消注释deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-updates main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-backports main restricted universe multiversedeb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-security main restricted universe multiverse# 预发布软件源，不建议启用# deb https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse# deb-src https://mirrors.tuna.tsinghua.edu.cn/ubuntu/ bionic-proposed main restricted universe multiverse<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>更新包：</p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">sudo apt updatesudo apt upgrade<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="二、安装cuda-toolkit"><a href="#二、安装cuda-toolkit" class="headerlink" title="二、安装cuda toolkit"></a>二、安装cuda toolkit</h2><p>显卡安装，参考：<a href="https://jintaolu.github.io/2022/10/20/win11-shen-du-xue-xi-huan-jing-da-jian/">Win11深度学习环境搭建</a></p><p><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/nvidia-smi.png"></p><p>安装cuda toolkit，进入 <a href="https://developer.nvidia.com/cuda-toolkit-archive">https://developer.nvidia.com/cuda-toolkit-archive</a> ，这里是需要登录的，请读者自行注册。按下图选择版本：<br><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/cuda_toolkit_wsl.png"></p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">wget https://developer.download.nvidia.com/compute/cuda/11.3.0/local_installers/cuda_11.3.0_465.19.01_linux.runsudo sh cuda_11.3.0_465.19.01_linux.run<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/run_cuda_toolkit.png"></p><p>安装完成后，在~/.bashrc中加入环境变量：</p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">vim ~/.bashrcexport PATH=/usr/local/cuda-11.3/bin:$PATHexport LD_LIBRARY_PATH=/usr/local/cuda-11.3/lib64:$LD_LIBRARY_PATHsource ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>验证是否安装成功</p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">nvcc -V<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/nvcc-V.png"></p><h2 id="三、安装cuDNN"><a href="#三、安装cuDNN" class="headerlink" title="三、安装cuDNN"></a>三、安装cuDNN</h2><p>官网： <a href="https://developer.nvidia.com/zh">https://developer.nvidia.com/zh</a><br><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/cudnn_linux.png"></p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">sudo tar -xvf cudnn-linux-x86_64-8.6.0.163_cuda11-archive.tar.xzsudo cp cudnn-linux-x86_64-8.6.0.163_cuda11-archive/lib/libcudnn* /usr/local/cuda-11.3/lib64/sudo cp cudnn-linux-x86_64-8.6.0.163_cuda11-archive/include/cudnn.h /usr/local/cuda-11.3/include/sudo cp cudnn-linux-x86_64-8.6.0.163_cuda11-archive/include/cudnn_version.h /usr/local/cuda-11.3/include/ sudo chmod a+r /usr/local/cuda-11.3/include/cudnn.h sudo chmod a+r /usr/local/cuda-11.3/lib64/libcudnn*<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/cudnn.png"></p><h2 id="四、安装Miniconda"><a href="#四、安装Miniconda" class="headerlink" title="四、安装Miniconda"></a>四、安装Miniconda</h2><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html"># 下载minicondawget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh# 修改运行权限chmod 777 Miniconda3-latest-Linux-x86_64.sh# 运行安装脚本./Miniconda3-latest-Linux-x86_64.sh一直按回车，在需要输入yes的时候输入yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>添加变量到bashrc中</p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">vim ~/.bashrcexport PATH=/home/你的用户名/miniconda3/bin:$PATHsource ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>conda换源</p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/msys2/conda config --set show_channel_urls yes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>pip换源</p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">pip install pip -Upip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="五、安装torch"><a href="#五、安装torch" class="headerlink" title="五、安装torch"></a>五、安装torch</h2><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">pip3 install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu113或conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>验证是否能使用GPU</p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">import torchtorch.cuda.is_available()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="/2022/10/20/win11-wsl2-cuda-pytorch-shen-du-xue-xi-huan-jing-da-jian/torch_cuda_is_available.png"></p><p><strong>如果输出显示为False，则尝试重启Ubuntu，再试一试</strong></p><p><strong>参考：</strong></p><ol><li><a href="https://zhuanlan.zhihu.com/p/436393852">https://zhuanlan.zhihu.com/p/436393852</a></li><li><a href="https://www.jianshu.com/p/e8401bbce562">https://www.jianshu.com/p/e8401bbce562</a></li><li><a href="https://blog.csdn.net/Rayone_/article/details/124410685">https://blog.csdn.net/Rayone_/article/details/124410685</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Win11 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> WSL2 </tag>
            
            <tag> Ubuntu20.04 </tag>
            
            <tag> CUDA </tag>
            
            <tag> PYTORCH </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Win11深度学习环境搭建</title>
      <link href="/2022/10/20/win11-shen-du-xue-xi-huan-jing-da-jian/"/>
      <url>/2022/10/20/win11-shen-du-xue-xi-huan-jing-da-jian/</url>
      
        <content type="html"><![CDATA[<h1 id="Win11深度学习环境搭建"><a href="#Win11深度学习环境搭建" class="headerlink" title="Win11深度学习环境搭建"></a>Win11深度学习环境搭建</h1><p>台式机电脑配置：</p><ul><li>CPU： Intel(R) Xeon(R) W-2123 CPU @ 3.60GHz   3.60 GHz</li><li>GPU： NVIDIA Quadro M4000</li><li>OS ： Windows 11 专业版</li></ul><h2 id="一、显卡驱动安装"><a href="#一、显卡驱动安装" class="headerlink" title="一、显卡驱动安装"></a>一、显卡驱动安装</h2><p>NVIDIA显卡驱动官网地址：<a href="https://www.nvidia.cn/Download/index.aspx?lang=cn">https://www.nvidia.cn/Download/index.aspx?lang=cn</a><br><img src="/2022/10/20/win11-shen-du-xue-xi-huan-jing-da-jian/nvidia_driver.png"><br><img src="/2022/10/20/win11-shen-du-xue-xi-huan-jing-da-jian/nvidia_driver2.png"></p><p>可用nvidia-smi验证是否安装正常：<br><img src="/2022/10/20/win11-shen-du-xue-xi-huan-jing-da-jian/nvidia-smi.png"></p><h2 id="二、CUDA安装"><a href="#二、CUDA安装" class="headerlink" title="二、CUDA安装"></a>二、CUDA安装</h2><p>nvidia官网下载对应版本：<a href="https://developer.nvidia.cn/cuda-toolkit-archive">https://developer.nvidia.cn/cuda-toolkit-archive</a><br>我这里选择的是cuda11.3.0离线安装，在线装网络不稳定。<br><img src="/2022/10/20/win11-shen-du-xue-xi-huan-jing-da-jian/cuda.png"></p><h2 id="三、cudnn安装"><a href="#三、cudnn安装" class="headerlink" title="三、cudnn安装"></a>三、cudnn安装</h2><p>点击: <a href="https://developer.nvidia.com/cuda-toolkit-archive">https://developer.nvidia.com/cuda-toolkit-archive</a><br>找到对应版本（11.3.0）的安装包并下载(需要注册账号)：<br><img src="/2022/10/20/win11-shen-du-xue-xi-huan-jing-da-jian/cudnn.png"></p><h2 id="四、PyTorch安装"><a href="#四、PyTorch安装" class="headerlink" title="四、PyTorch安装"></a>四、PyTorch安装</h2><p>先安装anaconda（省略安装过程），安装命令：</p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">conda install pytorch torchvision torchaudio cudatoolkit=11.3 -c pytorch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>验证cuda是否可用：<br><img src="/2022/10/20/win11-shen-du-xue-xi-huan-jing-da-jian/pytorch.png"></p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Win11 </tag>
            
            <tag> 深度学习 </tag>
            
            <tag> deep learning </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git报错:Failed to connect to github.com port 443 after 2123 ms: Connection refused</title>
      <link href="/2022/10/19/git-bao-cuo-failed-to-connect-to-github-com-port-443-after-2123-ms-connection-refused/"/>
      <url>/2022/10/19/git-bao-cuo-failed-to-connect-to-github-com-port-443-after-2123-ms-connection-refused/</url>
      
        <content type="html"><![CDATA[<h1 id="Git报错-Failed-to-connect-to-github-com-port-443-after-2123-ms-Connection"><a href="#Git报错-Failed-to-connect-to-github-com-port-443-after-2123-ms-Connection" class="headerlink" title="Git报错:Failed to connect to github.com port 443 after 2123 ms: Connection"></a>Git报错:Failed to connect to github.com port 443 after 2123 ms: Connection</h1><h2 id="问题描述："><a href="#问题描述：" class="headerlink" title="问题描述："></a>问题描述：</h2><p><img src="/2022/10/19/git-bao-cuo-failed-to-connect-to-github-com-port-443-after-2123-ms-connection-refused/error.png"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li><p>登录网站：<a href="https://www.ipaddress.com/">https://www.ipaddress.com</a></p></li><li><p>在打开的网站中将“github.com”复制到查询栏中进行搜索，可以看到域名对应的IP地址信息<br><img src="/2022/10/19/git-bao-cuo-failed-to-connect-to-github-com-port-443-after-2123-ms-connection-refused/github_ip.png"></p></li><li><p>进入 C:\Windows\System32\drivers\etc 将搜索结果中展示的Ip地址和域名拷贝系统hosts文件中,没有的话，则创建一个hosts文件：<br><img src="/2022/10/19/git-bao-cuo-failed-to-connect-to-github-com-port-443-after-2123-ms-connection-refused/hosts.png"></p></li><li><p>如若遇到 “ OpenSSL SSL_read: Connection was reset, errno 10054” 问题，则解除验证：</p><pre class="line-numbers language-angular2html" data-language="angular2html"><code class="language-angular2html">git config --global http.sslVerify "false"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="/2022/10/19/git-bao-cuo-failed-to-connect-to-github-com-port-443-after-2123-ms-connection-refused/error10054.png"></p></li><li><p>再次Git代码:<br><img src="/2022/10/19/git-bao-cuo-failed-to-connect-to-github-com-port-443-after-2123-ms-connection-refused/success.png"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2022/10/19/hello-world/"/>
      <url>/2022/10/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>pyinstaller打包之后的windows程序无法正常运行多进程</title>
      <link href="/2022/07/05/pyinstaller-da-bao-zhi-hou-de-windows-cheng-xu-wu-fa-zheng-chang-yun-xing-duo-jin-cheng/"/>
      <url>/2022/07/05/pyinstaller-da-bao-zhi-hou-de-windows-cheng-xu-wu-fa-zheng-chang-yun-xing-duo-jin-cheng/</url>
      
        <content type="html"><![CDATA[<h2 id="pyinstaller打包之后的windows程序无法正常运行多进程"><a href="#pyinstaller打包之后的windows程序无法正常运行多进程" class="headerlink" title="pyinstaller打包之后的windows程序无法正常运行多进程"></a>pyinstaller打包之后的windows程序无法正常运行多进程</h2><h3 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h3><p><img src="/2022/07/05/pyinstaller-da-bao-zhi-hou-de-windows-cheng-xu-wu-fa-zheng-chang-yun-xing-duo-jin-cheng/pyinstaller_err.png"></p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><p>在 if <strong>name</strong> == ‘<strong>main</strong>‘:的方法下面添加 multiprocessing.freeze_support()</p><pre class="line-numbers language-none"><code class="language-none">from multiprocessing import freeze_supportif __name__ == '__main__':    freeze_support()<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> pyinstaller </tag>
            
            <tag> 多进程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode分布式训练调试</title>
      <link href="/2022/06/29/vscode-fen-bu-shi-xun-lian-diao-shi/"/>
      <url>/2022/06/29/vscode-fen-bu-shi-xun-lian-diao-shi/</url>
      
        <content type="html"><![CDATA[<h2 id="解决torch-distributed训练时需要Debug问题"><a href="#解决torch-distributed训练时需要Debug问题" class="headerlink" title="解决torch.distributed训练时需要Debug问题"></a>解决torch.distributed训练时需要Debug问题</h2><h3 id="正常运行命令"><a href="#正常运行命令" class="headerlink" title="正常运行命令"></a>正常运行命令</h3><pre class="line-numbers language-none"><code class="language-none">CUDA_VISIBLE_DEVICES=0 python -m torch.distributed.launch --nproc_per_node 1  main.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="VSCODE调试"><a href="#VSCODE调试" class="headerlink" title="VSCODE调试"></a>VSCODE调试</h3><p>在VS Code中想要调试Python脚本很简单，只需要创建一个launch.json文件即可。</p><pre class="line-numbers language-none"><code class="language-none">{    // 使用 IntelliSense 了解相关属性。     // 悬停以查看现有属性的描述。    // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387    "version": "0.2.0",    "configurations": [        {            "name": "Python: Current File",            "type": "python",            "request": "launch",            "program": "xxx/lib/python3.6/site-packages/torch/distributed/launch.py",            "console": "integratedTerminal",            "justMyCode": true,            "cwd": "${workspaceFolder}/xxx/xxx",            "args": [                "--nproc_per_node","1",                "main.py"            ],            "env": {"CUDA_VISIBLE_DEVICES":"0"}        }    ]}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vscode </tag>
            
            <tag> 分布式训练 </tag>
            
            <tag> 调试 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
